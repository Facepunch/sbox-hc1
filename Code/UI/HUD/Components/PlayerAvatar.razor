@namespace Facepunch.UI
@inherits Panel

@attribute [StyleSheet]

<root class="@AvatarClasses">
    <div class="avatar" style="@(IsFriendly && Player.IsValid() ? $"border: 0.5px solid {PlayerColor.Hex}" : "")">
        @if ( Player.IsBot )
        {
            <img class="image" src="/ui/bot_avatar.png" />
        }
        else
        {
            <img class="image" src="avatar:@Player.SteamId" />
        }
    </div>

    @if ( !Pawn.IsValid() || IsDead )
    {
        <div style="background-image: url( ui/dead.png )" class="overlay" />

        return;
    }

    @if (ShowBomb && Pawn.Inventory.HasBomb && IsFriendly)
    {
        <Icon File="/ui/bomb.png" size="24" class="bomb-indicator"></Icon>
    }

    @if (ShowHealth && Pawn.HealthComponent.State == LifeState.Alive && IsFriendly)
    {
        <div class="health">
            <div class="health-inner" style="width:@(Player.PlayerPawn.HealthComponent.Health)%" />
        </div>
    }
</root>

@code
{
    public PlayerPawn Pawn => Player.IsValid() ? Player.PlayerPawn : null;
    public PlayerState Player { get; set; }
    public bool IsFriendly => PlayerState.Local.IsFriendly( Player );
    public Color PlayerColor => Player.IsValid() ? Player.PlayerColor : Color.White;
    private bool IsDead => !Pawn.IsValid() || Pawn?.HealthComponent.State != LifeState.Alive;

    public bool ShowBomb { get; set; } = true;
    public bool ShowHealth { get; set; } = true;

    private string AvatarClasses
    {
        get
        {
            if ( IsDead ) return "dead";
            return "";
        }
    }

    protected override int BuildHash()
    {
        var hash = HashCode.Combine( Player.SteamId, IsFriendly );

        if ( Pawn.IsValid() )
            hash = HashCode.Combine( hash, Pawn.HealthComponent.Health, Pawn.HealthComponent.State, Player.PlayerColor );
        
        return hash;
    }
}