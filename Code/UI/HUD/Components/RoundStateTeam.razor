@namespace Facepunch.UI
@inherits Panel
@attribute [StyleSheet]

<root class="team flex @(IconPosition == IconPositions.Right ? "justify-end" : "")">
    <div class="inner flex row gap-sm align-center with-padding blur">
        <div class="background" style="@BuildStyle()"></div>

        @if ( IconPosition == IconPositions.Left && !string.IsNullOrEmpty( Score ) )
        {
            <label class="vital with-px-lg" style="min-width: 75px; height: 45px; flex-shrink: 0; text-align: center;">@Score</label>
        }

        @if ( PlayerCount <= MaxPlayers )
        {
            @foreach ( var values in Players )
            {
                <PlayerAvatar key=@values @Player=@values />
            }
        }
        else
        {
            <div class="flex row align-center gap-sm">
                <i class="emphasis">person</i>
                <label class="emphasis">@Players.Count()</label>
            </div>
        }

        @if ( IconPosition == IconPositions.Right && !string.IsNullOrEmpty( Score ) )
        {
            <label class="vital with-px-lg" style="min-width: 75px; height: 45px; flex-shrink: 0; text-align: center;">@Score</label>
        }
    </div>
</root>

@code
{
    public enum IconPositions
    {
        Left,
        Right
    }

    public string Score { get; set; }
    public Team Team { get; set; }
    public IEnumerable<PlayerState> Players { get; set; }
    public IconPositions IconPosition { get; set; } = IconPositions.Left;

    private int PlayerCount => GameUtils.AllPlayers.Where( x => x.Team != Team.Unassigned ).Count();
    private int MaxPlayers => GameMode.Instance?.Get<HudOptions>()?.FullAvatarDisplayPlayerLimit ?? 10;

    private string TeamColor => Team.GetColor().Darken( 0.25f ).Hex;

    public int PlayerHash => Players?.GetHashCode<PlayerState>(x => HashCode.Combine( x?.SteamId, x?.Team ?? Team.Unassigned ) ) ?? 0;

    protected override int BuildHash()
    {
        return HashCode.Combine( Score, Team, Players, IconPosition, TeamColor, PlayerHash );
    }

    private string BuildStyle()
    {
        return $"background: linear-gradient( to {IconPosition}, rgba( {TeamColor}, 0.5 ), rgba( {TeamColor}, 0.75 ) ); border: 1px solid rgba( darken( {TeamColor}, 0.5 ), 0.5 );";
    }
}
