@inherits BaseMarkerPanel
@namespace Facepunch.UI
@attribute [StyleSheet]

@if ( !Point.IsValid() ) return;

<style>
    CapturePointMarker
    {
        justify-content: flex-end;
        align-items: center;
        flex-direction: column-reverse;
        text-shadow: 1px 1px 1px rgba( black, 1 );
        transform: translateY(-100%);

        .background
        {
            position: relative;
            backdrop-filter-blur: 20px;
            border: 1px solid @MarkerColor.Hex;
            justify-content: center;
            align-items: center;
            aspect-ratio: 1;
            background-color: @MarkerColor.Hex;
            padding: 10px;

            .name 
            {
                font-size: 20px;
                text-shadow: 1px 1px 1px rgba( black, 1 );
            }

            .bar {
                width: 100%;
                height: 100%;
               position: absolute;
            }

            .bar-inner {
                mix-blend-mode: lighten;
                position: relative;
                width: 100%;
                height: 100%;
                background-color: rgba( @MarkerColor.Hex, 0.2 );
            }
        }

        .players 
        {
            flex-direction: row;
        }

        Icon {
            background-image-tint: @MarkerColor.Hex;
        }
    }
</style>

<root>
    @if ( !Marker.IsValid() )
        return;

    @if ( !Viewer.IsValid() )
        return;

    <div class="players">

        @if ( Point.GetCount( Team.CounterTerrorist ) > 0 )
        {
            <div class="team" style="color: @((Team.CounterTerrorist).GetColor().Hex);">
                <i>person</i>
                <label>@Point.GetCount(Team.CounterTerrorist)</label>
            </div>
        }

        @if ( Point.GetCount( Team.Terrorist ) > 0 ) 
        {
            <div class="team" style="color: @((Team.Terrorist).GetColor().Hex);">
                <i>person</i>
                <label>@Point.GetCount(Team.Terrorist)</label>
            </div>
        }

    </div>

    <div class="background">
        <div class="bar">
            <div class="bar-inner" style="height:@(Point.Captured * 100)%"></div>
        </div>
        <label class="name">@Point.ShortName</label>
    </div>
</root>

@code
{
    public CapturePoint Point => Object?.GameObject?.Components?.Get<CapturePoint>();
    private PlayerPawn Viewer => Client.Viewer.PlayerPawn;
    public Color MarkerColor => Point.Color;

    bool LookingAt => MathF.Abs( Marker.CenterDistance.x ) < 0.1f && MathF.Abs( Marker.CenterDistance.y ) < 0.2f;

    public override void Tick()
    {
        base.Tick();

        SetClass( "contested", Point.CurrentState == CapturePoint.CaptureState.Contested );
        SetClass( "capturing", Point.CurrentState == CapturePoint.CaptureState.Capturing );
    }

    protected override int BuildHash()
    {
        return System.HashCode.Combine( Time.Now );
    }
}
