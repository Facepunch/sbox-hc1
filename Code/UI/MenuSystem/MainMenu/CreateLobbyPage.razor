@using Sandbox;
@using Sandbox.Network
@using Sandbox.UI;

@inherits Panel
@implements INavigatorPage
@namespace Facepunch.UI

<root class="hc1 blur">
    <Page>
        <Header>
            <div class="row gap align-center layout grow">
                <label>Play Game</label>
            </div>
        </Header>
        <Body>
            <div style="height: 23%;"/>

            <div class="layout column gap">
                <div class="layout row inset">
                    @foreach (var mode in GameMode.AllUnique.OrderBy( x => x.Title ) )
                    {
                        <div class="button standard smaller no-anim extra-x-padding @(SelectedGameMode == mode ? "selected" : "")" onclick=@(() => SetMode( mode ) )>@mode.Title</div>
                    }
                </div>

                <div class="layout padding-insane-x with-scroll column">
                    <VerticalDivider />

                    <div class="row with-bg layout padding-extra with-gap">
                        @if ( SelectedGameMode is not null )
                        {
                            @foreach ( var map in GameUtils.GetAvailableMaps() )
                            {
                                @if ( GameMode.GetAll( map ).Contains( SelectedGameMode ) )
                                {
                                    <MapCard Map=@map Selected=@( SelectedMap == map ) OnSelected=@SetMap />
                                }
                            }
                        }
                    </div>

                    <VerticalDivider />
                </div>
            </div>

            <div class="grow" />
        </Body>

        <Footer>
            <div class="grow" />

            @if ( SelectedMap is not null && SelectedGameMode is not null )
            {
                <div class="button standard action" onclick=@Join>
                    <label>Start</label>
                    <label class="emphasis slight" style="height: 30px;">@SelectedGameMode.Title</label>
                    <label>on</label>
                    <label class="emphasis slight" style="height: 30px;">@SelectedMap.Title</label>
                </div>
            }
        </Footer>
    </Page>
</root>

@code
{
    public SceneFile SelectedMap { get; set; }
    public GameModeInfo SelectedGameMode { get; set; }

    public GameModeList GameModeList { get; set; }

    private void SetMap( SceneFile map )
    {
        SelectedMap = map;
        StateHasChanged();
    }


    private void SetMode( GameModeInfo mode )
    {
        SelectedGameMode = mode;
        SelectedMap = null;
        StateHasChanged();
    }

    protected override void OnAfterTreeRender( bool firstTime )
    {
        if ( !firstTime )
            return;

        SelectedMap = GameUtils.GetAvailableMaps().FirstOrDefault();
        SelectedGameMode = GameMode.GetAll( SelectedMap )
            .FirstOrDefault();
    }

    private void Join()
    {
        if ( SelectedGameMode is null )
            return;

        if ( SelectedMap is null )
            return;

        GameMode.SetCurrent( SelectedGameMode );
        Game.ActiveScene.Load( SelectedMap );
    }

    public void OnNavigationOpen()
    {
        if ( MainMenuRoot.Instance.IsValid() )
        {
            MainMenuRoot.Instance.SetBlur( true );
        }
    }
    
    public void OnNavigationClose() 
    {
        if ( MainMenuRoot.Instance.IsValid() )
        {
            MainMenuRoot.Instance.SetBlur( false );
        }
    }
}
